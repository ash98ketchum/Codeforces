import java.util.*;

public class div2b271 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int arr[] = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        // Coordinate compression
        int worms[][] = new int[n][2];
        worms[0][0] = 1;
        worms[0][1] = arr[0];

        for (int i = 1; i < n; i++) {
            worms[i][0] = worms[i - 1][1] + 1;
            worms[i][1] = worms[i][0] + arr[i] - 1;
        }

        int m = sc.nextInt();

        while (m-- > 0) {
            int q = sc.nextInt();
            int start = 0, end = n - 1, ans = -1;
            while (start <= end) {
                int mid = (start + end) / 2;
                if (worms[mid][0] <= q && worms[mid][1] >= q) {
                    ans = mid;
                    break;
                } else if (worms[mid][0] > q) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
            System.out.println(ans + 1);
        }

        sc.close();
    }
}
